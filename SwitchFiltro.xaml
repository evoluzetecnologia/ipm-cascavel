<Activity mc:Ignorable="sap sap2010" x:Class="SwitchFiltro" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:rt="clr-namespace:Roboluze_Libre_Config.Tools;assembly=Roboluze.Libre.Config" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_TransactionItem" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="tipos" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="var" Type="InOutArgument(x:String)" />
  </x:Members>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Roboluze_Libre_Config.Tools</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Semantic.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomation.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Wizards</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>UiPath.Testing.RulesLibrary</AssemblyReference>
      <AssemblyReference>UiPath.Interop</AssemblyReference>
      <AssemblyReference>Roboluze.Libre.Config</AssemblyReference>
      <AssemblyReference>Roboluze.Libre.DataBase</AssemblyReference>
      <AssemblyReference>Roboluze.Libre.Dominio</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>Roboluze.UiPath</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Switch x:TypeArguments="x:String" DisplayName="Switch Filtro" Expression="[io_Config(&quot;ToDo&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="671,1236" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Switch.Default>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\Acesso Cliente.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Process\Acesso Cliente.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Switch.Default>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:CommentOut x:Key="DownloadSaidaXML" sap:VirtualizedContainerService.HintSize="486,303" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Saida</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Download">XML</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="DownloadSaidaTXT" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Saida</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Download">TXT</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="DownloadSaidaPDF" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Saida</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Download">PDF</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="DownloadEntradaXML" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Entrada</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Download">XML</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="DownloadEntradaTXT" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Entrada</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Download">TXT</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="DownloadEntradaPDF" DisplayName="Process\Download Periodo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Process\Download Periodo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Entrada</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Download">PDF</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="ProtocolarSaida" DisplayName="Process\Declaracao.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Process\Declaracao.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Saida</InArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="ProtocolarEntrada" DisplayName="Process\Declaracao.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Process\Declaracao.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_Tipo">Entrada</InArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="SimplesNacional" DisplayName="Process\Simples Nacional.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Process\Simples Nacional.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_Fechar">False</InArgument>
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" x:Key="PendenciaDownload" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="631,787" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[tipos]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="tipo" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="597,601" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="555,513" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Split(io_Config(&quot;Download&quot;+tipo.ToString()).ToString().ToUpper(),&quot;-&quot;).ToList()]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="521,327" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="s:DateTime" Name="minutosDownload" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,147" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[item.ToUpper.ToString()+".pendente"]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:DateTime">[minutosDownload]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.Now.AddMinutes(Convert.ToInt32(io_Config("MinutosDownload")))]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[minutosDownload &gt; DateTime.Now]" DisplayName="Do While Aguardar Arquivo Para Download" sap:VirtualizedContainerService.HintSize="479,52" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                        <ui:InterruptibleDoWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,474" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <rt:Arquivo BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="334,294" sap2010:WorkflowViewState.IdRef="Arquivo_6" in_Config="[io_Config]" in_Tipo="[item.ToString()+&quot;\&quot;+tipo.ToString().ToUpper()]" io_FilePath="[var]" io_TransactionItem="[io_TransactionItem]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </rt:Arquivo>
                            <ui:IfElseIf DisplayName="Download Pendentes" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                              <ui:IfElseIf.ConditionBlocks>
                                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                  <ui:IfElseIfBlock BlockType="If" Condition="[File.Exists(var)]">
                                    <ui:IfElseIfBlock.Then>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\Download Pendente.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Process\Download Pendente.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
                                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem" />
                                            <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </ui:IfElseIfBlock.Then>
                                  </ui:IfElseIfBlock>
                                  <ui:IfElseIfBlock BlockType="Else">
                                    <ui:IfElseIfBlock.Then>
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,116" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="s:DateTime">[minutosDownload]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="s:DateTime">[DateTime.Now.AddMinutes(Convert.ToInt32(io_Config("MinutosDownload"))*-1 )]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:MultipleAssign>
                                    </ui:IfElseIfBlock.Then>
                                  </ui:IfElseIfBlock>
                                </sc:BindingList>
                              </ui:IfElseIf.ConditionBlocks>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:IfElseIf>
                          </Sequence>
                        </ui:InterruptibleDoWhile.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleDoWhile>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="Relatorio" DisplayName="Process\Relatorio.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Process\Relatorio.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <x:Null x:Key="" />
      <x:Null x:Key="SolicitacaoCancelamento" />
    </Switch>
  </Sequence>
</Activity>