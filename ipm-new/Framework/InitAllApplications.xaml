<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:rs="clr-namespace:Roboluze_Libre_Config.System;assembly=Roboluze.Libre.Config" xmlns:rs1="clr-namespace:Roboluze_Libre_DataBase.System;assembly=Roboluze.Libre.DataBase" xmlns:rt="clr-namespace:Roboluze_Libre_Config.Tools;assembly=Roboluze.Libre.Config" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1077,1303</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Roboluze_Libre_Config.System</x:String>
      <x:String>Roboluze_Libre_Config.Tools</x:String>
      <x:String>Roboluze_Libre_DataBase.System</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Forms.Activities</x:String>
      <x:String>UiPath.Forms.Activities.Base</x:String>
      <x:String>UiPath.Studio.Forms.Runtime</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Roboluze.Libre.Config</AssemblyReference>
      <AssemblyReference>Roboluze.Libre.DataBase</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Forms.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Forms.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="574,1198" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="var" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="parametro" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <rt:ToDo sap:VirtualizedContainerService.HintSize="512,90" sap2010:WorkflowViewState.IdRef="ToDo_2" io_Config="[io_Config]" />
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[io_Config(&quot;ToDo&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="512,926" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence x:Key="DownloadNFSaida" DisplayName="Download" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_50">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_3" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_48">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_2" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="DownloadNFEntrada" DisplayName="Download" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_4" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_53">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_51">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_3" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="ProtocolarNFSaida" DisplayName="Download" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_5" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_58">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_56">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_4" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_59">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="ProtocolarNFEntrada" DisplayName="Download" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_65">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_6" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_63">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_61">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_5" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_64">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="SimplesNacional" DisplayName="Download" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_7" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_68">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_66">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_6" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_67" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_69">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_6" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="EmitirNFS" DisplayName="Emissao de NFs" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_2" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="465,434" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[io_Config("IPMCodigoLogin").ToString()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">[parametro("IPMLogin").ToString()]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[parametro("IPMPassword").ToString()]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo">[var]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">5</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not var.Equals(io_Config(&quot;IPMCodigoLogin&quot;).ToString())]" DisplayName="Novo Código" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,574" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[parametro("IPMCodigoLogin")]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[var]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[var]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(parametro, Newtonsoft.Json.Formatting.Indented)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <rs1:Set_Assets DisplayName="Set Assets" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="Set_Assets_1" in_Config="[io_Config]" in_Key="Parametro" in_Value="[var]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </rs1:Set_Assets>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_Config("Parametro")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[var]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41" />
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_45">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence x:Key="CertidaoNegativa" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Process\IPM\Login.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_Login">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Password">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="io_Codigo" />
            <InArgument x:TypeArguments="x:Int32" x:Key="in_Time">1</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\IPM\Logout.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Process\IPM\Logout.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[io_Config]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
      <Sequence x:Key="DebitosIPM" DisplayName="DebitosIPM" sap:VirtualizedContainerService.HintSize="472,586" sap2010:WorkflowViewState.IdRef="Sequence_75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <rs:Json_Convert_Dictionary in_Dictionary="{x:Null}" io_String="{x:Null}" DisplayName="Json Convert Dictionary" sap:VirtualizedContainerService.HintSize="410,52" sap2010:WorkflowViewState.IdRef="Json_Convert_Dictionary_8" in_AutomationName="[io_Config(&quot;ApplicationKey&quot;).ToString()]" in_String="[io_Config(&quot;Parametro&quot;).ToString()]" io_Dictionary="[parametro]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </rs:Json_Convert_Dictionary>
        <If Condition="[Not parametro(&quot;IPMLogin&quot;).ToString().Equals(&quot;&quot;) And Not parametro(&quot;IPMPassword&quot;).ToString().Equals(&quot;&quot;)]" DisplayName="Dados de Acesso" sap:VirtualizedContainerService.HintSize="410,383" sap2010:WorkflowViewState.IdRef="If_26">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,201" sap2010:WorkflowViewState.IdRef="Sequence_73">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process\Prefeitura\Login Prefeitura.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Process\Prefeitura\Login Prefeitura.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Login">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="parametro(&quot;IPMLogin&quot;).ToString()" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="parametro(&quot;IPMPassword&quot;).ToString()" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="376,303" sap2010:WorkflowViewState.IdRef="Sequence_74">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Atenção" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;Favor informar usuário e senha do IPM para emissão de notas&quot;]" />
              <Throw Exception="[New Exception(&quot;Não pode emitir nota sem acesso ao ipm&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_7" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
    </Switch>
  </Sequence>
</Activity>